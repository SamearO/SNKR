{"ast":null,"code":"var _jsxFileName = \"/Users/samir/Documents/A-Level/Computer Science A-Level/Coursework/Project/Initial Testing/test2/src/components/MyApp.js\";\n// import { Grid } from \"@material-ui/core\";\n// import React from \"react\";\n// import Paper from \"@material-ui/core/Paper\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import MyAreaChart from \"./MyAreaChart.js\";\n// import Filter from \"./Filter.js\";\n// import moment from \"moment\";\n// // styling (CSS)\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: \"center\",\n//     color: theme.palette.text.secondary,\n//   },\n// }));\n// // Grid Function; allocates space for components\n// export default function CenteredGrid() {\n//   const classes = useStyles();\n//   // this block of code finds the date of one day in the future to make sure the graph is showing all results as default\n//   const today = new Date();\n//   var tomorrow = new Date(today + 1);\n//   tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\");\n//   // sets the size hook to 0 (all sizes) as defualt\n//   const [size, setSize] = React.useState(0);\n//   // sets the date hook to the date of tommorow to ensure that all results are shown as default\n//   const [date, setDate] = React.useState(tomorrow);\n//   return (\n//     <div className={classes.root}>\n//       <Grid container spacing={3}>\n//         <Grid item xs={4}>\n//           <Paper className={classes.paper}>\n//             <Filter\n//               size={size}\n//               setSize={setSize}\n//               date={date}\n//               setDate={setDate}\n//             />\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12}>\n//           <Paper className={classes.paper}>\n//             <MyAreaChart size={size} date={date} />\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </div>\n//   );\n// }\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MyAreaChart from \"./MyAreaChart.js\";\nimport Filter from \"./Filter.js\";\nimport moment from \"moment\"; // core components\n// import Button from \"./imported/CustomButtons/Button.js\";\n\nimport Card from \"./imported/Card/Card.js\";\nimport CardBody from \"./imported/Card/CardBody.js\";\nimport GridItem from \"./imported/Grid/GridItem.js\";\nimport CardHeader from \"./imported/Card/CardHeader.js\";\nimport CardFooter from \"./imported/Card/CardFooter.js\";\nimport styles from \"././imported/assets/jss/material-dashboard-react/cardImagesStyles.js\";\nimport Button from \"././imported/CustomButtons/Button.js\"; // styling(CSS);\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: \"center\",\n//     color: theme.palette.text.secondary,\n//   },\n// }));\n\nconst useStyles = makeStyles(styles); // Grid Function; allocates space for components\n\nexport default function CenteredGrid() {\n  const classes = useStyles(); // this block of code finds the date of one day in the future to make sure the graph is showing all results as default\n\n  const today = new Date();\n  var tomorrow = new Date(today + 1);\n  tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\");\n  var start = new Date(2018, 1, 1);\n  start = moment(start).format(\"YYYY-MM-DD\"); // sets the size hook to 0 (all sizes) as defualt\n\n  const [size, setSize] = React.useState(0); // sets the date hook to the date of tommorow to ensure that all results are shown as default\n\n  const [endDate, setEndDate] = React.useState(tomorrow);\n  const [startDate, setStartDate] = React.useState(start);\n  return (\n    /*#__PURE__*/\n    // <div className={classes.root}>\n    //   <Grid container spacing={3}>\n    //     <Grid item xs={4}>\n    //       <Paper className={classes.paper}>\n    //         <Filter\n    //           size={size}\n    //           setSize={setSize}\n    //           date={date}\n    //           setDate={setDate}\n    //         />\n    //       </Paper>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <Paper className={classes.paper}>\n    //         <MyAreaChart size={size} date={date} />\n    //       </Paper>\n    //     </Grid>\n    //   </Grid>\n    // </div>\n    // <div>\n    //   <Grid container spacing={1}>\n    //     <GridItem xs={12} sm={12} md={20}>\n    //       <Card style={{ width: \"40rem\" }}>\n    //         <CardHeader>\n    //           <h4>className={classes.cardTitle}</h4>\n    //         </CardHeader>\n    //         <CardBody>\n    //           <MyAreaChart>\n    //             size={size}\n    //             date={date}\n    //           </MyAreaChart>\n    //         </CardBody>\n    //       </Card>\n    //     </GridItem>\n    //     <GridItem xs={12} sm={12} md={6}>\n    //       <Card Filter style={{ width: \"40rem\" }}>\n    //         <CardHeader color=\"danger\" className></CardHeader>\n    //         <CardBody>\n    //           <Filter>\n    //             size={size}\n    //             setSize={setSize}\n    //             date={date}\n    //             setDate={setDate}\n    //           </Filter>\n    //         </CardBody>\n    //       </Card>\n    //     </GridItem>\n    //   </Grid>\n    // </div>\n    React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"lightblue\",\n        width: \"1859\",\n        height: \"1200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridItem, {\n      xs: 6,\n      sm: 6,\n      md: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"40rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \"Sales Graph\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyAreaChart, {\n      size: size,\n      startDate: startDate,\n      endDate: endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(GridItem, {\n      xs: 6,\n      sm: 6,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"40rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Filter\")), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      size: size,\n      setSize: setSize,\n      startDate: startDate,\n      setStartDate: setStartDate,\n      endDate: endDate,\n      setEndDate: setEndDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }))))))\n  );\n}","map":{"version":3,"sources":["/Users/samir/Documents/A-Level/Computer Science A-Level/Coursework/Project/Initial Testing/test2/src/components/MyApp.js"],"names":["Grid","React","Paper","makeStyles","MyAreaChart","Filter","moment","Card","CardBody","GridItem","CardHeader","CardFooter","styles","Button","useStyles","CenteredGrid","classes","today","Date","tomorrow","format","start","size","setSize","useState","endDate","setEndDate","startDate","setStartDate","backgroundColor","width","height"],"mappings":"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","sourcesContent":["// import { Grid } from \"@material-ui/core\";\n// import React from \"react\";\n// import Paper from \"@material-ui/core/Paper\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import MyAreaChart from \"./MyAreaChart.js\";\n// import Filter from \"./Filter.js\";\n// import moment from \"moment\";\n\n// // styling (CSS)\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: \"center\",\n//     color: theme.palette.text.secondary,\n//   },\n// }));\n\n// // Grid Function; allocates space for components\n// export default function CenteredGrid() {\n//   const classes = useStyles();\n\n//   // this block of code finds the date of one day in the future to make sure the graph is showing all results as default\n//   const today = new Date();\n//   var tomorrow = new Date(today + 1);\n//   tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\");\n\n//   // sets the size hook to 0 (all sizes) as defualt\n//   const [size, setSize] = React.useState(0);\n\n//   // sets the date hook to the date of tommorow to ensure that all results are shown as default\n//   const [date, setDate] = React.useState(tomorrow);\n\n//   return (\n//     <div className={classes.root}>\n//       <Grid container spacing={3}>\n//         <Grid item xs={4}>\n//           <Paper className={classes.paper}>\n//             <Filter\n//               size={size}\n//               setSize={setSize}\n//               date={date}\n//               setDate={setDate}\n//             />\n//           </Paper>\n//         </Grid>\n//         <Grid item xs={12}>\n//           <Paper className={classes.paper}>\n//             <MyAreaChart size={size} date={date} />\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </div>\n//   );\n// }\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MyAreaChart from \"./MyAreaChart.js\";\nimport Filter from \"./Filter.js\";\nimport moment from \"moment\";\n\n// core components\n// import Button from \"./imported/CustomButtons/Button.js\";\nimport Card from \"./imported/Card/Card.js\";\nimport CardBody from \"./imported/Card/CardBody.js\";\nimport GridItem from \"./imported/Grid/GridItem.js\";\nimport CardHeader from \"./imported/Card/CardHeader.js\";\nimport CardFooter from \"./imported/Card/CardFooter.js\";\nimport styles from \"././imported/assets/jss/material-dashboard-react/cardImagesStyles.js\";\nimport Button from \"././imported/CustomButtons/Button.js\";\n\n// styling(CSS);\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//   },\n//   paper: {\n//     padding: theme.spacing(2),\n//     textAlign: \"center\",\n//     color: theme.palette.text.secondary,\n//   },\n// }));\nconst useStyles = makeStyles(styles);\n\n// Grid Function; allocates space for components\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  // this block of code finds the date of one day in the future to make sure the graph is showing all results as default\n  const today = new Date();\n  var tomorrow = new Date(today + 1);\n  tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\");\n  var start = new Date(2018, 1, 1);\n  start = moment(start).format(\"YYYY-MM-DD\");\n\n  // sets the size hook to 0 (all sizes) as defualt\n  const [size, setSize] = React.useState(0);\n\n  // sets the date hook to the date of tommorow to ensure that all results are shown as default\n  const [endDate, setEndDate] = React.useState(tomorrow);\n\n  const [startDate, setStartDate] = React.useState(start);\n\n  return (\n    // <div className={classes.root}>\n    //   <Grid container spacing={3}>\n    //     <Grid item xs={4}>\n    //       <Paper className={classes.paper}>\n    //         <Filter\n    //           size={size}\n    //           setSize={setSize}\n    //           date={date}\n    //           setDate={setDate}\n    //         />\n    //       </Paper>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <Paper className={classes.paper}>\n    //         <MyAreaChart size={size} date={date} />\n    //       </Paper>\n    //     </Grid>\n    //   </Grid>\n    // </div>\n    // <div>\n    //   <Grid container spacing={1}>\n    //     <GridItem xs={12} sm={12} md={20}>\n    //       <Card style={{ width: \"40rem\" }}>\n    //         <CardHeader>\n    //           <h4>className={classes.cardTitle}</h4>\n    //         </CardHeader>\n    //         <CardBody>\n    //           <MyAreaChart>\n    //             size={size}\n    //             date={date}\n    //           </MyAreaChart>\n    //         </CardBody>\n    //       </Card>\n    //     </GridItem>\n    //     <GridItem xs={12} sm={12} md={6}>\n    //       <Card Filter style={{ width: \"40rem\" }}>\n    //         <CardHeader color=\"danger\" className></CardHeader>\n    //         <CardBody>\n    //           <Filter>\n    //             size={size}\n    //             setSize={setSize}\n    //             date={date}\n    //             setDate={setDate}\n    //           </Filter>\n    //         </CardBody>\n    //       </Card>\n    //     </GridItem>\n    //   </Grid>\n    // </div>\n    <div\n      style={{\n        backgroundColor: \"lightblue\",\n        width: \"1859\",\n        height: \"1200px\",\n      }}\n    >\n      <Grid container spacing={1}>\n        <GridItem xs={6} sm={6} md={10}>\n          <Card style={{ width: \"40rem\" }}>\n            <CardHeader color=\"danger\">\n              <h4>Sales Graph</h4>\n            </CardHeader>\n            <CardBody>\n              <MyAreaChart\n                size={size}\n                startDate={startDate}\n                endDate={endDate}\n              ></MyAreaChart>\n            </CardBody>\n          </Card>\n        </GridItem>\n\n        <GridItem xs={6} sm={6} md={6}>\n          <Card style={{ width: \"40rem\" }}>\n            <CardHeader color=\"warning\">\n              <h4>Filter</h4>\n            </CardHeader>\n            <CardBody>\n              <Filter\n                size={size}\n                setSize={setSize}\n                startDate={startDate}\n                setStartDate={setStartDate}\n                endDate={endDate}\n                setEndDate={setEndDate}\n              ></Filter>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}