{"ast":null,"code":"var _jsxFileName = \"/Users/samir/Documents/A-Level/Computer Science A-Level/Coursework/Project/Initial Testing/test2/src/components/MyApp.js\";\nimport { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MyAreaChart from \"./MyAreaChart.js\";\nimport Filter from \"./Filter.js\";\nimport moment from \"moment\"; // styling (CSS)\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n})); // Grid Function; allocates space for components\n\nexport default function CenteredGrid() {\n  const classes = useStyles(); // this block of code finds the date of one day in the future to make sure the graph is showing all results as default\n\n  const today = new Date();\n  var tomorrow = new Date(today + 1);\n  tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\"); // sets the size hook to 0 (all sizes) as defualt\n\n  const [size, setSize] = React.useState(0); // sets the date hook to the date of tommorow to ensure that all results are shown as default\n\n  const [date, setDate] = React.useState(tomorrow);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    size: size,\n    setSize: setSize,\n    date: date,\n    setDate: setDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyAreaChart, {\n    size: size,\n    date: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/samir/Documents/A-Level/Computer Science A-Level/Coursework/Project/Initial Testing/test2/src/components/MyApp.js"],"names":["Grid","React","Paper","makeStyles","MyAreaChart","Filter","moment","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","CenteredGrid","classes","today","Date","tomorrow","format","size","setSize","useState","date","setDate"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJgC,CAAZ,CAAD,CAA5B,C,CAWA;;AACA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,OAAO,GAAGb,SAAS,EAAzB,CADqC,CAGrC;;AACA,QAAMc,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASD,KAAK,GAAG,CAAjB,CAAf;AACAE,EAAAA,QAAQ,GAAGjB,MAAM,CAACiB,QAAD,CAAN,CAAiBC,MAAjB,CAAwB,YAAxB,CAAX,CANqC,CAQrC;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzB,KAAK,CAAC0B,QAAN,CAAe,CAAf,CAAxB,CATqC,CAWrC;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB5B,KAAK,CAAC0B,QAAN,CAAeJ,QAAf,CAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEW,OAAO,CAACT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEc,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,OAAO,EAAEC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAET,OAAO,CAACT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEc,IAAnB;AAAyB,IAAA,IAAI,EAAEG,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAXF,CADF,CADF;AAqBD","sourcesContent":["import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MyAreaChart from \"./MyAreaChart.js\";\nimport Filter from \"./Filter.js\";\nimport moment from \"moment\";\n\n// styling (CSS)\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\n// Grid Function; allocates space for components\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  // this block of code finds the date of one day in the future to make sure the graph is showing all results as default\n  const today = new Date();\n  var tomorrow = new Date(today + 1);\n  tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\");\n\n  // sets the size hook to 0 (all sizes) as defualt\n  const [size, setSize] = React.useState(0);\n\n  // sets the date hook to the date of tommorow to ensure that all results are shown as default\n  const [date, setDate] = React.useState(tomorrow);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>\n            <Filter\n              size={size}\n              setSize={setSize}\n              date={date}\n              setDate={setDate}\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <MyAreaChart size={size} date={date} />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}